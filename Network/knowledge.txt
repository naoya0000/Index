
■各階層の役割(TCP/IP)
アプリケーション層：通信アプリケーション機能の実現
トランスポート層：ノード間のデータ転送の信頼性確保
インターネット層：ネットワーク間のエンドツーエンドのための通信規定
ネットワークインターフェース層：主に直接的に接続されたノード間のための通信規定
 
 
■コンピュータ上の処理の主体
アプリケーション層：通信アプリケーションプログラム
トランスポート層・インターネット層(ネットワーク層)：OS
ネットワークインターフェース層(データリンク層・物理層)：デバイスドライバ・NIC
 
 
■セグメント
論理的または物理的にネットワークを分割した小さなネットワークのこと
論理セグメント：VLAN等の技術を使用して、ソフトウェアでネットワークを分割したもの
※物理的なネットワークハードウェアに依存しない
物理セグメント：スイッチやルータ等の物理的なハードウェアを使用して、ネットワークを分割したもの
 
 
 
■ARP
IPアドレスからMACアドレスの情報を得られるプロトコル
同じセグメント(物理セグメント)のすべての端末にARPリクエストをブロードキャストし、ARPリプライが返ってくる
異なるネットワークと通信する場合はまずデフォルトゲートウェイのIPからMACアドレス知るためにARPリクエストを送信する
※一般的にデフォルトゲートウェイのIP＝ルータのIP
 
 
■ARPキャッシュ
一度、ARPリクエストとARPリプライによりARPの情報がやり取りされるとARPキャッシュとして一定時間残る
ARPキャッシュキャッシュはARPテーブルに保存されている
※Windowsならコマンドプロンプトより arp -a で確認可能
 
 
■GARP
自分自身に設定するIPアドレスが重複していないかどうかを検出
同一ネットワーク機器上のARPキャッシュを更新させる(フェイルオーバー等で切替が発生した機器とすぐに通信できるようにするため)
 
 
■VRRP(オープンな標準)・HSRP(Cisco独自)
ネットワーク機器のフェイルオーバーを実現するために使用できる冗長化プロトコル
 
 
■traceroute
ICMPプロトコルを使用したネットワーク診断プログラム
使用コマンド
Windows:tracert　ICMPプロトコルを使用
Linux,Cisco機器:traceroute　UDPを使用
 
 
■ポート番号
コンピュータが通信を行うために通信先のアプリケーションを特定するための番号
宛先IPが分かれば、そのIPアドレスに送信できるが、そのデータを受信したコンピュータが、どのアプリケーションでそれを受信するのが判断するためにはポート番号が必要
※例）データがメールサーバに送られるのか、Webサーバに送られるのか
 
 
■ポート番号の例
ウェルノウンポート番号：0-1023 サーバのアプリケーションに割り当てられる
登録済みポート番号：1024-49151 独自に作成されたアプリケーションに割り当てられる
ダイナミックポート番号：49152-65535 クライアント側のアプリケーションに割り当てられる
 
 
■ポート番号
20:TCP::FTP
21:TCP:FTP
22:TCP/UDP::ssh
23:TCP::Telnet
25:TCP/UDP::SMTP
53:TCP/UDP::DNS
80:TCP/UDP::HTTP
443:TCP/UDP::HTTPS
514:rsh(リモートシェル)
3389:RDP
 
 
■DHCP
ネットワーク接続するのに必要なIPアドレス等の機能を自動的に割り当てるアプリケーション層プロトコル
パソコンなどをケーブルに接続するだけでネットワーク接続可能
 
 
■DHCPサーバとDHCPクライアント
DHCPサーバ：IPアドレス等の設定情報をDHCPクライアントに割り当てる
DHCPクライアント：IPアドレス等の設定情報をDHCPサーバから割り当てられる(パソコンやIP機器)
 
 
■DHCPリレーエージェント(ルータやL3スイッチに搭載される)
DHCPサーバとDHCPクライアントとの通信ではブロードキャストアドレスが使用されるのでDHCPサーバとDHCPクライアントは同じネットワーク(サブネット)にいる必要がある
*ルータやL3スイッチはブロードキャストを通過させない(いまは一般的な機能としてDHCPリレーエージェントをもつ)
DHCPリレーエージェント機能：DHCPクライアントからのブロードキャストを受信し、ユニキャストに変換してDHCPサーバに転送する機能
*DHCPサーバとDHCPクライアントが異なるサブネットに存在しても転送可能
 
 
■リゾルバ(DNSクライアント)
DNSクライアントのこと
ドメイン名からIPアドレス、IPアドレスからドメイン名に名前解決を行うソフトウェアプログラム
 
 
■DNSサーバ
キャッシュDNSサーバ：ドメイン名とIPアドレスの対応の問い合わせをを行い、その結果をキャッシュする
権威DNSサーバ：ドメイン名とIPアドレスの対応表を「ゾーン」という単位で管理する
 
 
■DNSプロキシ(DNSリレー、Proxy DNSとも呼ぶ)
DNSサーバ以外の機器がDNSの名前解決要求を代理で応答する機能
DNSクライアント⇔DNSプロキシ⇔DNSサーバ
 
 
■HTTP
WebサーバとクライアントのWebブラウザがデータを送受信するために使用するアプリケーション層のプロトコル
HTTPはTCP上で動作しており、Webサーバにアクセスするために使用しているポート番号は80
 
 
■HTTPリクエストのメソッド種類
GET：データを取得することをWebサーバに要求
HEAD：データそのものは要求せず、メッセージヘッダだけを取得することをWebサーバに要求
POST：Webサーバにデータを送信
PUT：Webサーバにファイルをアップロード
DELETE：Webサーバ上にあるデータを削除することを要求
CONNECT：プロキシサーバなどにトンネルの確立を要求
 
 
■HTTPステータスコード
100番台：情報(続きの情報があることを伝える)
200番台：成功
300番台：リダイレクト(別のURLへリクエストしなおすように要求する)
400番台：クライアントエラー(クライアントのリクエストに問題有)
500番台：サーバエラー(サーバ側に問題があり処理できなかった)
 
 
■サーバ証明書
サーバーが本物であることを証明し、通信を暗号化するための電子証明書
認証局(CA)が発行する
サーバー証明書には、発行者・有効期限・ドメイン名等の情報が含まれる
サーバー証明書には、公開鍵と秘密鍵という二つの鍵が含まれ、データを暗号化に寄与する
 
 
■SSL/TLS
インターネット上の通信を暗号化し、セキュリティを向上させるためのプロトコル
*SSL(Secure Sockets Layer)
*TLS(Transport Layer Security):現在はTLSが主流
非対称暗号化と対象暗号化の二つの暗号化方式を組み合わせたハイブリッド暗号化という仕組みを採用
ハイブリッド暗号化は共通鍵認証と公開鍵認証のいいとこどりをした暗号化方式
共通鍵認証；処理速度は速いが鍵の共有が課題
公開鍵認証：処理速度は遅いが鍵の共有が容易
*ハイブリッド暗号化
1.共通鍵の生成：送信側がランダムな共通鍵を生成する
2.公開鍵による共通鍵の暗号化：送信側は、受信側の公開鍵を使用して、生成した共通鍵を暗号化する
3.暗号化データと暗号化共通鍵の送信：送信側は、暗号化データと暗号化共通鍵を受信側に送信する
4.秘密鍵による共通鍵の復号化：受信側は、秘密鍵を使用して暗号化共通鍵を復号する
5.共通鍵によるデータの復号：受信側は、複号した共通鍵を使用して暗号化データを復号する
 
 
■CGI
クライアント側のWebブラウザの要求に応じてWebサーバが外部プログラムを呼び出して、その実行結果がHTTPを介してクライアントのWebブラウザに送信される仕組み
 
 
■Cookie
クライアントのWebブラウザとWebサーバとの間で、状態を維持・管理する仕組み
通信の際にクライアントのWebブラウザに保存された情報のこと(セッション管理とユーザ識別を実現するために利用される)
 
 
■SMTP
電子メールを送信するために使用するアプリケーション層のプロトコル
メールクライアント(メールソフト)からメールサーバへ電子メールを送信する際に使用する
 
 
■POP
電子メールを受信するために使用するアプリケーション層のプロトコル
メールクライアントがメールサーバから電子メールを受信する際に使用される
現在の主流はPOP3
TCP上で動作しており、POPサーバにアクセスするために使用しているポート番号は110
 
 
■Telnet
ネットワークに接続された機器を遠隔操作するために使用するアプリケーション層プロトコル
Telnetクライアント：遠隔操作する側のソフトウェア(ユーザーがtelnetサーバーに接続し、コマンドを入力し、結果を表示するためのインターフェースを提供する)
Telnetサーバ：遠隔操作される側のプログラム(Telnetクライアントからの接続を受け入れ、コマンドを実行し結果を返送する)
 
 
■SSH(Secure SHell)
ネットワークに接続された機器を遠隔操作するために使用するアプリケーション層プロトコル
Telnetと異なり、パスワード情報含めてすべてのデータが暗号化されて送信される
 
 
■FTP(File Transfer Protocol)
特定のコンピュータ間でファイル転送するときに使用するアプリケーション層プロトコル
ログインに使用されるユーザ名とパスワード情報は暗号化されない
セキュアなFTP通信を行いたい場合はFTPS(FTP over SSL/TLS)やSFTP(SSH FTP)を使用する
 
FTPでは二つのTCPコネクションを利用する
1.制御用：コントロールコネクション
ログインするためのユーザ名やパスワード情報やファイルの転送方法などのために使用される
2.データの転送用：データコネクション
転送されるデータの送受信のために使用される
 
・アクティブモード(FTPサーバから接続要求を行うモード・コントロールコネクションはどちらのモードでもクライアントから接続要求をする)
FTPクライアントがFTPサーバにアクセスする際に、データコネクションには宛先ポート番号20を使用
FTPクライアントがFTPサーバにアクセスする際に、コントロールコネクションには宛先ポート番号21を使用
 
・パッシブモード(FTPクライアントから接続要求を行うモード・コントロールコネクションはどちらのモードでもクライアントから接続要求をする)
FTPクライアントがFTPサーバにアクセスする際に、データコネクションにはランダムなポート番号が割り当てられる
FTPクライアントがFTPサーバにアクセスする際に、コントロールコネクションには宛先ポート番号21を使用
*アクティブモードとパッシブモードのどちらを使用するかはFTPクライアントで設定する
 
*SGの穴あけ例
*インバウンドルール(どのポートでトラフィックを受け入れるか)
1.穴あけ対象サーバ⇒FTP先サーバ
　<アクティブの場合>
　　Inbound：20, 1024-65535
　　Outbound：21
　<パッシブの場合>
　　Inbound：設定なし
　　Outbound：21,1024-65535
2.FTP元⇒穴あけ対象サーバ
　<アクティブの場合>
　　Inbound：21
　　Outbound：20, 1024-65535
　<パッシブの場合>
　　Inbound：21,1024-65535
　　Outbound：設定なし
 
FTP接続
・開始
ftp [IP]
ユーザー名・PWを入力
・終了
bye
 
 
■TFTP
FTPがTCP上で動作するのに対し、TFTPはUDP上で動作する
TFTPクライアントがTFTPサーバにアクセスする際に、宛先ポート番号としてUDPの69を使用(最初のリクエストのみ・以降の通信ではランダムなポートを使用)
 
 
■SNMP
ルータ・スイッチ・サーバ等TCP/IPネットワークに接続された通信機器に対し、ネットワーク経由で監視、制御するためのアプリケーション層プロトコル
SNMPマネージャ：SNMPエージェントに対する情報の要求や監視などを行う　ポート番号162 UDP
SNMPエージェント：SNMPマネージャからの要求への応答、状態変化時の通知を行う(ルータ、スイッチ、サーバなど)　ポート番号161 UDP
*MIB(ミブ):SNMPエージェントが持っている機器情報の集合体
 
 
■syslog
IPネットワーク上でログメッセージを転送する標準規格でありクライアント/サーバ型プロトコル
syslog送信側(ルータ等)はsyslog受信側(Linuxサーバなど)に対してログ情報をテキストメッセージで送信する
 
 
■syslogのSeverity(メッセ—ジの優先度)
emerg:非常に危険な状態
alert:危険な状態
crit:危険な状態
err:一般的なエラー
warning:システムからの警告
notice:システムからの重要な通知
info:システムからの情報
debug:デバッグ情報
none:ファシリティ無効(メッセージを送らない)
 
 
■I/F(インターフェース)
 
 
■ルート情報の追加方法
スタティックルート：管理者が宛先ネットワークへの最適なルートを手動で設定したルートのこと(ルーティングプロトコルの使用：有)
ダイナミックルート：ルータで設定されたルーティングプロトコルにより、自動的に追加されるルートのこと(ルーティングプロトコルの使用：有)
直接接続ルート：ネットワーク機器が直接接続しているネットワークに関する情報に基づいて作成される(ルーティングプロトコルの使用：無)
*ルーティングテーブルにおけるエントリ：ルーティングテーブルに含まれる個々の情報(宛先ネットワーク、サブネットマスク、インターフェース等)
*アクセスリストにおけるエントリ：ネットワークにアクセスできるユーザーやデバイスを制御するためのリスト
 
 
■ルーティングプロトコル
 
 
■リピータ(Layer1のデバイス)
ケーブルで流れる電気信号を増幅し波形を整えてもう一方のインターフェースから電気信号を流す
*イーサネットLANにおいて電気信号は伝送距離が長ければ長いほど信号がだんだん弱くなり減衰していく。
それにより電気信号にゆがみが生じることで正しくデータを受信処理できなくなる場合もあるのでケーブル使用時には必ず使用していた。
*現在ではあまり見られない
 
 
■リピータハブ(Layer1のデバイス)
リピータ同様電気信号の波形の増幅や整形を行う
複数のポートを持っていることがリピータとの差異
*現在ではあまり見られない
 
 
■ブリッジ(Layer2のデバイス)
リピータ同様電気信号の波形の増幅や整形を行う
イーサネットフレームのヘッダの理解が可能、ヘッダの宛先MACアドレスをみて適切なポートにフレームを転送することができる
ブリッジには学習機能があり、MACアドレステーブルに従いフレームを転送するようになるため、無駄なトラフィックを防いだりコリジョンが起こりにくくなる
*コリジョン(衝突):複数の機器が同じ通信路に同時にデータを送信しようとした際に発生する現象（データの破損やそれに伴う再送処理が必要になる）
*現在ではあまり見られない
 
 
■L2スイッチ(Layer2のデバイス)
スイッチングハブまたはL2スイッチとも呼ばれる
スイッチ≒多くのポートがあるブリッジ
ブリッジはソフトウェアで処理するがスイッチはハードウェアにより処理することがブリッジのとの差異
メーカーごとに機能が違う
*フレーム転送方式
ストアアンドフォワード(主流)：一つのフレーム全体を受信した後、メモリにストア(蓄積)してからFCSによるエラーチェックを行い、問題なければフォワード(転送)する
他にカットスルー、フラグメントフリーなどがある
 
 
■L3スイッチ(Layer3のデバイス)
L2スイッチの機能に加え、各ポートがルーティングできる機能を有している
ルータよりもパケット処理能力が高く、企業内のLANネットワークのコア機器として位置づけられるのが一般的
但し、ルータのようにWAN接続や暗号化処理など高度なソフトウェア処理はできない
 
 
■ルータ(Layer3のデバイス)
ネットワーク層で動作する機器
ルータは物理層では電気信号の送受信を行い、データリンク層ではフレームヘッダのタイプを見ることにより上位層のプロトコルを識別する
IPパケットの場合、ネットワーク層でパケットヘッダの宛先アドレスを見てルーティングテーブル(パケットの配送先の経路情報)に従ってパケットを転送する
*イーサネットLANではデータの単位をフレームと呼び、TCP/IPではデータの単位をパケットと呼ぶ
 
 
 
 
■ステートフル・ステートレス
ステートフル：過去の状態を保持し、その状態に基づいて処理を行うこと
ステートレス：過去の状態を保持せず、毎回の処理を独立して行うこと
 
 
■プレフィックスリスト
CIDR形式で表されるIPアドレスをまとめたリスト
複数のCIDR範囲をひとまとめに管理できる
ネットワークのルーティングやセキュリティに使用される
 
 
■トラフィック
ネットワーク上を流れるデータや量
 
 
■レイテンシ
データが送信元から送信先へ到達するまでのデータの遅延
 
 
■帯域幅
ネットワーク上で転送できるデータ量の最大値
 
 
■プライベートIP
10.0.0.0-10.255.255.255 えーと(クラスA 10)
172.16.0.0-172.31.255.255 ひと夏色のサインが(172 16 31)
192.168.0.0-192.168.255.255 いい国、いろは歌(192 168)