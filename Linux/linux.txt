 
/bin
システムの基本的なコマンド（バイナリ）が格納されている
*一般ユーザーが実行できるコマンド
 
 
/sbin
システム管理用のコマンド（バイナリ）が格納されている
*システム管理者（ルートユーザー）が実行できるコマンド
 
 
/boot
Linuxシステムの起動に必要なファイルが格納されている
vmlinuz:カーネルファイル（システム起動時に使用されるカーネルの実行ファイル）
initramfs:初期RAMファイルシステム(カーネルが起動する際に必要なデバイスドライバ(ハードウェアデバイスを制御するためのソフトウェア)やファイルシステムを含む)
ブートローダーの設定ファイル（システム起動時の動作やカーネルのパラメータが定義されている）
その他のブートに関するファイル
 
/boot/efi/
*UEFIシステムにおけるブートローダーや関連ファイルを格納するディレクトリ
*従来のBIOSに代わる新しいファームウェア規格
 
/boot/grub2/
*GRUB2ブートローダーの関連ファイルを格納するためのディレクトリ
 
/boot/grub2/grub.cfg
*実際のGRUBの設定ファイル(システムの起動時に使用される設定が記述される)
*直接編集することは推奨されていないため、/etc/default/grubを編集して設定を変更することが推奨されている
*/etc/default/grubはGRUBの設定を変更するためのファイル
 
/boot/loader/
*OS起動に必要なファイルを格納するディレクトリ
 
/boot/loader/entries/
*GRUB2ブートローダーで使用されるブートエントリーを格納するためのディレクトリ
*ブートエントリー:OSやその他のブート可能なシステムを起動するための設定情報を含むファイル
 
/boot/symvers***
*シンボリックリンク(カーネルモジュール名と実際のファイルパスの対応関係を記述)とバージョン情報(カーネルモジュールのバージョン番号と依存関係を記述)を含むファイル
*カーネルモジュールのロード時に、シンボリックリンクを使用して正しいモジュールを解決する（利点：カーネルモジュールのロード高速化）
 
/boot/vmlinuz***(ブイエムリナックス)
*内部にLinuxカーネル本体を包含する静的リンクされた実行ファイル
*システム起動時にブートローダーによってメモリにロードされる
 
/boot/vmlinuz-0-rescue***(ブイエムリナックス)
*レスキューモード専用のカーネル(必要なドライバやモジュールのみが組み込まれているため、通常のカーネルよりも軽量)
*システムが起動に失敗した場合などに問題を診断したり修復したりするために使用する特殊な起動モード
 
/boot/initramfs-*
*特定のカーネルバージョン(*)に対応する初期RAMファイルシステムを格納するファイル
 
/boot/config-*
*カーネル設定ファイル(カーネルのコンパイル時に指定されたすべての設定情報が保存されている)
*コンパイル:プログラムのソースコードをコンピュータが理解できるバイナリコードに変換すること
 
/boot/System.map-*
*カーネル内の各シンボル(関数名、変数名など)とその対応するメモリアドレスを紐づけるファイル
 
/boot/.vmlinuz-*
*カーネルイメージ、カーネルのコードとデータが圧縮された形で格納されている
 
 
/dev
デバイスファイルが格納されている（Linuxシステム内でのデバイス（ディスク以外も）へのアクセスを管理している）
ディスクデバイス：ハードディスクやSSD等の物理的なディスクデバイスを表すファイル
ex. /dev/sda /dev/nvme0n1
パーティションデバイス：ディスク上のパーティションを表すファイル
ex. /dev/sda1 /dev/nvme0n1p1
仮想デバイス：仮想的なデバイスを表すファイル
ex.
/dev/null:無効なデータを読み書きするファイル
/dev/zero:ゼロで埋められたデータを読みだすファイル
/dev/random:ランダムなデータを提供するファイル
キャラクタデバイス：キーボードやマウスなどの文字単位でデータを送受信するデバイスを表すファイル
ex. /dev/tty(端末デバイス)
 
 
/etc
システム全体や個々のアプリケーションの設定ファイルが格納されている
 
*デーモン
UNIX系OSで、バックグラウンドで実行されるプログラムの一種
通常、ユーザーの操作を待ち受けずにシステム全体で動作し、特定のサービスを提供したり、システムの特定の側面を管理する
システムの起動時に自動的に開始され、システムが終了するまで実行され続けることが一般的
 
/etc/abrt/
*ABRTの設定を管理するためのディレクトリ
*ABRT:自動バグレポートツール(システム上での以上終了や重大なエラーなどの問題を検出し、自動的にレポートを生成してユーザーやシステム管理者に通知する)
 
/etc/adjtime
*システムクロックのずれを補正するための情報が含まれる
*ntpdなどの時刻同期サービスがシステムクロックのずれ(ドリフト)を監視して調整する際に更新される
 
/etc/aliases
*メールサーバー(Sendmail,Postfixなど)で使用されるメールエイリアスを定義するためのファイル
*左側にエイリアス名、右側に転送先（ex. postmaster: rootならpostmaster宛に送信されたメールはroot宛に転送される）
 
/etc/alternatives/
*コマンドの別バージョンを管理するためのディレクトリ(シンボリックリンクが格納されている)
*あるファイルやディレクトリのショートカットのようなもの
 
/etc/amazon/
*AWS関連の設定ファイルを格納するためのディレクトリ
 
/etc/anacrontab
*システム起動時に実行されるジョブをスケジューリングするためのファイル
 
/etc/asciidoc/
*AsciiDocの設定ファイルを格納するためのディレクトリ
*AsciiDoc:軽量マークアップ言語
 
/etc/asound.conf
*ALSA(Advanced Linux Sound Architecture)の設定ファイル
*ALSA:サウンドカードやオーディオデバイスを管理するサブシステム
 
/etc/at.deny
*atコマンドを使用して予約されたジョブの実行を拒否するユーザーのリストを保持するためのファイル
*at.denyファイルがない場合、at.allowファイルが使用される
 
/etc/audit/
*監査(audit)機能を設定するためのディレクトリ
 
/etc/audit/auditd.conf
*auditdの設定ファイル
*auditd:監査デーモン（システムやアプリケーションの動作を監査するための機能を提供する）
 
/etc/authselect/
*システム認証と認証ソースを設定するためのディレクトリ
 
/etc/bash_completion.d/
*Bashのコマンド補完機能を拡張するためのディレクトリ（ex. コマンド名の入力時に候補を表示）
 
/etc/bashrc
*Bashシェルの設定ファイルの一つ（Bashが起動する際に読み込まれるスクリプト）
*ユーザー環境やシェルの動作をカスタマイズするための設定を含む
 
/etc/bindresvport.blacklis
*一部のUNIXOSで使用される
*特定のプログラムが一般的な予約済みポートを使用しないようにするためのファイル
 
/etc/binfmt.d/
*バイナリフォーマットのハンドリングを設定するためのファイル
*バイナリフォーマット:0と1のビットパターンで構成される(主にプログラムやデータを表現する際に使用される)
*ハンドリング:ある対象に対して、適切な処理や管理を行うこと
 
/etc/chkconfig.d/
*chkconfigユーティリティが使用する設定ファイルを格納するためのディレクトリ
*chkconfig:システムのランレベルごとにサービスを有効または無効にするためのスクリプトを管理する
*ランレベル:特定の機能やサービスのセットを定義する番号(Linuxでは通常、0~6までの7つのランレベルが定義されており、各ランレベルは特定のサービスやプロセスが実行されるかどうかを決定する)
 
/etc/chrony.conf
*Chrony(時刻同期ソフトウェア)の設定ファイル
*Chrony:時刻同期を正確に保つために複数のタイムサーバーと通信し、システム時刻を調整する
 
/etc/chrony.keys
*Chrony(時刻同期ソフトウェア)で使用される鍵(キー)ファイル
 
/etc/cifs-utils/
*CIFS(Common Internet File System)を使用する際に必要なユーティリティや設定ファイルが格納されているディレクトリ
*ユーティリティ:コンピュータシステム上で特定の機能を提供するためのソフトウェアプログラムのこと
 
/etc/cloud/
*クラウドインスタンスや仮想マシンで使用される設定ファイルやスクリプトを格納するためのディレクトリ
 
/etc/cloud/cloud.cfg
*クラウドインスタンスで使用されるCloud-initパッケージの設定ファイル（インスタンス起動時に実行される初期化タスクを定義する）
*cloud-initはクラウド環境で仮想マシンやインスタンスを起動する際に自動で実行され、インスタンスの初期設定やカスタマイズを行うために使用される
 
/etc/cloud/cloud.d/
*Cloud-initの追加の設定ファイルが格納されるディレクトリ
 
/etc/cni/
*CNI(Container Network Interface)という仕組みを使用するコンテナランタイム(Docker,Kubernetesなど)でネットワークを構成するための設定ファイル
*CNI:コンテナ間やコンテナとホスト間のネットワーク接続を管理するための標準的なインターフェース
 
/etc/cockpit/
*Cockpitの設定ファイルを格納するためのディレクトリ（Cockpitが管理するサービスごとの設定ファイルも含まれる）
*Cockpit:Webインターフェースを通じてサーバーの管理を行うためのツール。システムの監視、セキュリティの設定、サービスの管理等の機能を提供する
 
/etc/containers/
*Docker等が使用するコンテナ設定ファイルを格納するためのディレクトリ
 
/etc/crontab
*cronデーモンが定期的に実行するジョブを定義するために使用される
*分　時　日　月　曜日
 
/etc/cron.d/
*Cronデーモンが定期的なジョブのスケジュールを管理するための設定ファイルを格納するディレクトリ
 
/etc/cron.[hourly,daily,weekly,monthly]/
*毎時・毎日・毎週・毎月の基準で定期的に実行されるスクリプトやジョブを格納するためのディレクトリ
cronデーモンによって使用される
 
/etc/cron.deny
*Cronジョブの実行を拒否するために使用されるファイル
*このファイルに記載されたユーザー名は、Cronジョブの実行が許可されない
 
/etc/crypto-policies/
*暗号化ポリシーを管理するためのディレクトリ
*各種暗号化アルゴリズムやプロトコルに関する設定ファイルが含まれている
 
/etc/crypttab
*ディスクの暗号化を管理するための設定ファイル
 
/etc/csh.cshrc
*システム全体のCシェルの設定ファイル
 
/etc/csh.login
*Cシェルのログイン時に読み込まれるシステム全体の設定ファイル
 
/etc/dbus-1/
*DBus(Desktop Bus)システム用の設定ファイルやシステムポリシーが格納されるディレクトリ
*DBus:プロセス間通信システム
 
/etc/dconf/
*dconf(Desktop Configration)システム用の設定ファイルが格納されるディレクトリ
*dconf:GNOMEデスクトップ環境で使用される設定管理システム
 
/etc/default/
*デフォルトの設定ファイルを格納するためのディレクトリ
*システム全体や特定のパッケージに関連するデフォルトの設定や環境変数を定義するために使用される
 
/etc/default/grub
*GNU GRUB（GNUプロジェクトによって開発されたブートローダー）の設定ファイル
*GRUBの設定を管理するためのシェルスクリプトファイル
*Linuxシステムの起動時に使用されるブートローダーの設定を定義する
*ブートローダー:コンピュータが起動時に最初に実行されるプログラム
*カーネルパラメータはブートローダーの設定ファイルに記述されることが多い（/etc/default/grub）
ハードウェアの初期化
オペレーティングシステム（OS）の起動
 
/etc/default/useradd
*useraddコマンドで新しいユーザーを追加する際（ユーザーアカウント作成時）のデフォルト設定を定義するファイル
 
/etc/depmod.d/
*カーネルの依存関係を管理するための設定ファイルが格納されるディレクトリ
 
/etc/depmod.d/dist.conf
*Linuxディストリビューション特有のカーネルモジュールの依存関係を管理するための設定ファイル
 
/etc/depmod.d/kvdo.conf
*KVM(Kernel-based Virtual Machine),KVDO(Kernel-based Virtual Data Optimizer)モジュールの依存関係を管理するための設定ファイル
 
/etc/dhcp/
*DHCPクライアントやサーバーの設定ファイルが格納されるディレクトリ
*DHCP:ネットワーク上のコンピューターに自動的に割り当てるために使用されるプロトコル
 
/etc/DIR_COLORS
*lsコマンドで表示されるファイルやディレクトリの色の設定ファイル
 
/etc/DIR_COLORS.256color
*256色対応の端末向けの色設定ファイル
 
/etc/dnf/
*DNFパッケージマネージャーの設定ファイル
 
/etc/dnf/dnf.conf
*パッケージ管理を行うための設定ファイル
*DNFはYUMの後継
 
/etc/dracut.conf
*dracutの動作を制御するメイン設定ファイル
*dracut:initramfs(初期RAMファイルシステム)を生成するためのツール
*RAM(揮発性メモリ：電源断で記憶内容が消えるメモリ)上に存在するファイルシステム
 
/etc/dracut.conf.d/
*dracutの動作を拡張するためのモジュールやフック(スクリプト)を提供するディレクトリ
 
/etc/egl/
*EGLの設定ファイル
*EGL:OpenGL ES API(3DグラフィックスAPI)に依存しない方法で実装するためのライブラリ
 
/etc/environment
*システム全体の環境変数を設定するためのファイル
 
/etc/ethertypes
*イーサネットフレームで使用されるEtherType値を定義するファイル
*EtherType値:イーサネットフレームのデータ部分の種類を示す16ビットの値
 
/etc/exports
*NFSサーバーがクライアントにエクスポートするファイルシステムを定義するファイル
*NFSサーバー:ネットワーク経由でファイルシステムを共有するためのサーバー
 
/etc/exports.d/
*NFSサーバーの設定ファイル(/etc/exports)を拡張するためのディレクトリ
 
/etc/favicon.png
*WebブラウザでWebサイトのアイコンとして表示されるfavicon画像ファイル
*favicon画像:Webサイトのシンボルマークとして使用される小さな画像
 
/etc/filesystems
*システムでサポートされているファイルシステムとその属性を定義するファイル
*システム起動時に読み込まれ、ファイルシステムの種類等(XFSなど)やマウントオプション等の情報を提供する
 
/etc/firewalld/
*firewalldの設定ファイルを格納するためのディレクトリ
*firewalld:Linuxディストリビューションで使用されるファイアウォールソフトウェア
 
/etc/fonts/
*システム全体で使用可能なフォントファイルを格納するためのディレクトリ
 
/etc/fprintd.conf
*fprintdデーモンの設定ファイル
*fprintdデーモン:システム上で指紋認証を管理するデーモン
 
/etc/fstab
*マウントするファイルシステムの情報とマウント時のオプションを記述するテキストファイル
*UUID:一意の識別子（複数のシステムやアプリケーション間で一意にオブジェクトを識別するために使用される）
 
/etc/fuse.conf
*FUSE(Filesystem in Userspace)の設定ファイル
*FUSE:ユーザー空間でファイルシステムを実装するためのフレームワーク
 
/etc/fwupd/
*fwupdが使用する設定ファイルやキャッシュファイルが格納されている
*fwupd(Firmware Update):ファームウェア更新ツール
*ファームウェア:ハードウェアの制御や動作を行うためのプログラムやデータの集合体
 
/etc/gconf/
*GNOMEデスクトップ環境に関連する設定ファイルが格納されているディレクトリ
*GNOME:Linux系OSで標準的に利用されているデスクトップ環境
*デスクトップ環境:コンピュータの操作やアプリケーションの実行を容易にするためのGUI(グラフィカルユーザーインターフェース)
 
/etc/gcrypt
*GnuPGなどの暗号化ソフトウェアで使用される設定ファイルや鍵ファイルが格納されているディレクトリ
 
/etc/gdbinit
*GNU Debugger(GDB)の初期設定を行うための設定ファイル
*GDB:デバッグやプロファイリングを行うためのツール
 
/etc/gdbinit.d/
*GDBの初期設定を追加できる複数の設定ファイルを格納するためのディレクトリ
 
/etc/glvnd/
*GLVND(OpenGL Vendor-Neutral Dispatch Library)の設定ファイルを格納するディレクトリ
*GLVND:異なるOpenGL（2Dや3Dのグラフィックスを描画するためのクロスプラットフォームのAPI）実装が同じシステムに存在する場合に、それらを適切に管理するための仕組み
 
/etc/gnupg/
*GnuPGの設定ファイルを格納するディレクトリ
*GnuPG(GNU Privacy Guard):データの暗号化やデジタル署名を行うためのツール
 
/etc/grafana/
*Grafanaの設定ファイルを格納するディレクトリ
*Grafana:データの可視化やダッシュボードの作製を行うためのオープンソースのツール
 
/etc/GREP_COLORS
*grep系コマンドで出力されるテキストのカラーリングを制御するための設定ファイル
 
/etc/groff/
*GNU roffのシステム設定ファイルが格納されているディレクトリ
*GNU roff(groff):高度な文書フォーマット機能を提供するオープンソースの文書作成システム
 
/etc/group
*グループ情報が格納されているファイル
*グループ名：グループID：プライマリーグループ：サブグループ１：サブグループ2・・・
 
/etc/group-
*「-」つきの設定ファイルは以前のバージョンのバックアップファイルらしい
 
/etc/grub2.cfg
*/boot/grub2/grub.cfgへのリンク
 
/etc/grub.d/
*GRUBの設定ファイルを管理するためのディレクトリ(GRUBの設定に関するスクリプトが含まれている)
 
/etc/gshadow
*グループのパスワード情報が格納されているファイル
 
/etc/host.conf
*ホスト名の解決方法(ホスト名からIPアドレスを見つけるプロセス)を設定するためのファイル
 
/etc/hostname
*システムのホスト名が記載されるファイル
 
/etc/hosts
*ホスト名とIPアドレスの対応関係を記述するテキストファイル
*DNSサーバよりも優先的に参照される
 
/etc/httpd/
*Apache HTTP Serverの設定ファイルが格納されるディレクトリ
 
/etc/httpd/conf/httpd.conf
*Apache HTTP Serverのメインの設定ファイル
*/etc/httpd/：Apache HTTP Serverの設定ファイルやモジュールを格納するためのディレクトリ
 
/etc/httpd/conf.d/
*Apache HTTP Serverの追加の設定ファイルが格納されるディレクトリ
 
/etc/httpd/conf.modules.d/
*Apache HTTP Serverのモジュールの設定ファイルが格納されるディレクトリ
 
/etc/init.d/
*SysV initや類似の初期化システムで使用されるシステムやサービスを管理するためのスクリプトが配置されるディレクトリ
 
/etc/kdump/
*kdumpサービスの設定ファイルを格納するディレクトリ
*kdump:システムがクラッシュ(異常終了)した場合にカーネルダンプを収集するための仕組み
*カーネルダンプ：システムのクラッシュ時にシステムのメモリ内容やカーネルの状態を保存すること(これにより、クラッシュ時の状態を復元し、問題の原因を特定するのに役立つ)
 
/etc/kdump.conf
*カーネルクラッシュ時のダンプ（保存）設定ファイル
*カーネルクラッシュ:OSのカーネル部分で致命的なエラーが発生し、システムが停止してしまう状態
*kdump:リナックスカーネルが異常終了（クラッシュ）した際に最後の瞬間のメモリの内容や実行状態、システムからの最後のメッセージなどをストレージ上に記録する機能
 
/etc/kernel/
*カーネルパッケージの管理や設定に関連するファイルが格納されるディレクトリ
 
/etc/kernel/install.d/
*新しいカーネルがインストールされる際に実行されるシェルスクリプトが配置されるディレクトリ
 
/etc/kernel/postinst.d/
*新しいカーネルがインストールされた後に実行されるシェルスクリプトが配置されるディレクトリ
 
/etc/keyutils/
*キー管理ユーティリティ(セキュリティ関連のキー(暗号鍵、認証情報等)を管理するためのツール)の設定ファイルを格納するディレクトリ
 
/etc/ld.so.conf.d/
*個々のプログラムの共有ライブラリの検索パスを定義する設定ファイルが格納されているディレクトリ
*共有ライブラリ:複数のプログラムで共通的に使用されるプログラム部品
 
/etc/ld.so.conf.d/kernel-*
*カーネルバージョン*に必要な共有ライブラリの検索パスを定義する設定ファイル
 
/etc/logrotate.conf
*システムのデフォルトのログローテーション設定（個別設定がない場合に適用）
*ログファイルの自動ローテーションと圧縮を設定するファイル←ログファイルの肥大化を防ぎ、ディスク容量を節約するために使用する
weekly：ログを週単位でローテーションする
rotate 4：ログファイルを4つまで保持する
create：ログファイルが存在しない場合に新しい空のログファイルを作成する
dateext：ログファイルに日付を付けてバックアップする
compress：ログファイルを圧縮する
nocompress:ログファイルを圧縮しないようにする
missingok:ログファイルが存在しなくてもエラーを発生させずに処理を続行する
postrotate-endscript:間にローテーション後に実行するコマンドやスクリプトが記述できる
include /etc/logrotate.d：この設定があることで/etc/logrotate.d配下の設定ファイルで定義されたログローテートが機能する
 
/etc/logrotate.d/
*ログローテーションの個別の設定ファイルを格納するディレクトリ
 
/etc/logrotate.d/syslog
*syslog（var/log/messages等）のローテーション定義する設定ファイル
*ログローテートの抑止：古いログファイルを削除したりバックアップしたりする処理が行われなくなるということ
*/etc/logrotate.d/配下の個別設定ファイルから削除・コメントアウトすると抑止可能
 
/etc/logrotate.d/vsftpd
*vsftpdサーバーのログファイルを管理するためのログローテーション設定ファイル
 
/etc/logrotate.d/kvm_stat
*KVMに関連するログファイルのローテ—ト設定ファイル
*KVM:Linuxカーネルをハイパーバイザーとして動作させる仮想化技術
*ハイパーバイザー:仮想化を行うためのソフトウェア
 
/etc/PackageKit/
*PackageKitの構成ファイルディレクトリ
*PackageKit：RPMベースのパッケージ管理システム
 
/etc/pam.d/
*PAMの設定ファイルが格納されるディレクトリ
*PAM(Pluggable Authentication Modules):各アプリケーションから共通の認証方式を利用できるようにする仕組み
 
/etc/pam.d/login
*PAMの設定ファイルの一つで、ユーザーがシステムにログインする際の認証処理を定義する
*PAM:ユーザー認証を行うための仕組みやインターフェイスを提供するシステム（telnetやrlogin等に）
 
/etc/passwd
*ユーザーアカウントの設定ファイル
ユーザー名:PW:UID:GID:GECOS:ホームディレクトリ:ログインシェル
*UID:ユーザー識別番号
*GECOS:ユーザーの補足情報
*ホームディレクトリ:ユーザーのホームディレクトリのパス
*ログインシェル:ユーザーがログイン時に使用するシェルのパス
 
/etc/profile.d/
*システム全体の環境設定スクリプトが配置されるディレクトリ
*環境設定：ソフトウェアやシステムが動作するために必要な設定やパラメータ、以下を含む
環境変数：ソフトウェアやシステムが実行時に参照する値
設定ファイル：ソフトウェアやシステムの動作を制御するためのファイル
オプション：ソフトウェアやシステムの実行時に指定するパラメータ
 
/etc/profile.d/history.sh
*すべてのユーザーのシェル履歴の設定を行うファイル
export HISTSIZE:Bashシェルで保存されるコマンドの数を制限するために使用される環境変数
export HISTFILESIZE:Bashシェルで保存されるヒストリファイル（コマンド履歴を保存するファイル）のサイズを制御
export HISTTIMEFORMAT:コマンドが実行される際のフォーマットを指定する環境変数（設定するとhistoryコマンドで実行時刻が表示される）
 
/etc/profile.d/vim.sh
*Vim(テキストエディタ)に関する環境変数や設定のために使用される
 
/etc/rsyslog.conf
*rsyslogデーモンの設定ファイル
*rsyslogデーモン:ログメッセージを収集、処理、転送するためのデーモン
 
/etc/security/
*セキュリティ関連の設定ファイルが格納されるディレクトリ
 
/etc/security/limits.conf
*リソース制限を設定するためのファイル
 
/etc/security/limits.d/
*ユーザーやプロセスが使用できるリソースの制限を設定するためのファイルを格納するディレクトリ
*このディレクトリに配置されたファイルは、ユーザーやグループごとに設定され、システム全体のリソース使用量を制限するのに利用される
*soft（ソフトリミット）:この値を超えると警告が出るが、プロセスは続行可能
*hard（ハードリミット）:システム全体の上限設定。この値を超えると、プロセスはエラーを返して操作が中止される
パラメータ
*core:コアダンプの最大サイズ
*nproc:プロセスの最大数（同時実行できるプロセスの数）
*nofile:ユーザーが同時に開くことのできるファイルディスクリプタ（ファイルやソケットなどのリソースへの参照）の最大数
 
/etc/security/limits.d/20-nproc.conf
*ユーザープロセス数の制限設定ファイル
 
/etc/security/limits.d/apache.conf
*Apacheプロセスのリソース制限を設定するための設定ファイル（ex. 最大プロセス数、最大メモリ使用量、最大スタックサイズ）
*PAMによって読み込まれる
 
/etc/security/limits.d/jboss.conf
*JBossアプリケーションサーバーのプロセスリソース制限を設定するための設定ファイル
*PAMの一部であるpam_limitsにより読み込まれる
 
/etc/ssh/
*SSHの設定ファイルや鍵ファイルが格納されるディレクトリ
*ssh
*公開鍵認証(クライアントが生成)：
1.クライアントがSSHキーペア(公開鍵と秘密鍵)を生成(ssh-keygenコマンドで実施)
2.公開鍵をSSHサーバーのauthorized_keysファイルに追加（これによりクライアントはSSHサーバーに対して公開鍵認証を使用できるようになる）
3.クライアントがSSH接続を開始すると、サーバーがクライアントにランダムなデータを送る
4.クライアント自信の秘密鍵を使用してチャレンジを署名して送信
5.サーバーは、クライアントが使用した公開鍵を使用して署名を検証し認証を完了する
 
*公開鍵認証(SSHサーバーが生成)：SSHサーバーが公開鍵認証を使用してクライアントからの接続を許可する際に使用。クライアント側の公開鍵とサーバー側の秘密鍵がペアを形成する
1.SSHサーバーがSSHキーペア(公開鍵と秘密鍵)を生成(ssh-keygenコマンドで実施)
2.公開鍵をSSHクライアント（クライアントがSSHサーバーへの接続を確立するために利用するもの）のknown_hostsファイルに追加（これによりサーバーがクライアントの公開鍵を信頼し、公開鍵認証を使用できるようになる）
3.クライアントがSSH接続を開始すると、サーバーは公開鍵を使用してクライアントの身元を確認する
4.クライアントは秘密鍵を使用して接続を確立する
 
一方の鍵で暗号化された情報はもう一方の鍵でのみ複号可能
*秘密鍵(Private Key)：ユーザー保管（外部公開されない・暗号化された情報を復号・デジタル証明の検証）
*公開鍵(Public Key)：一般公開されだれでもアクセス可能、暗号化された情報を受け取る際に使用され、また他者によって生成されたデジタル署名を検証するためにも使用される
*データの送信者：受信者の公開鍵を使用して情報を復号化
*データの受信者：自信の秘密鍵を使用して情報を復号化
*デジタル署名：情報の送信者は自身の秘密鍵を使用して署名を作成し、受信者は送信者の公開鍵を使用して署名を検証
 
/etc/ssh/sshd_config
*OpenSSHサーバーの設定ファイル（ポート番号・認証方式・ログインを許可するユーザーやIP・セキュリティなど）
*OpenSSHサーバー:SSHプロトコルを使用してリモートコンピュータに安全に接続するためのソフトウェア
 
/etc/ssl/
/etc/sudoers
*sudoコマンドの権限設定ファイル（どのユーザーにsudoコマンドの使用を許可するか）
*すべてのユーザーに適用される
 
/etc/sudoers.d/
*/etc/sudoersを補完するためのファイル（特定のユーザーにsudoコマンドの使用を許可）
*/etc/sudoers.d/ディレクトリ内のファイルは特定のユーザーグループにのみ適用される
 
/etc/sudo-ldap.conf
/etc/sysconfig/
*システム全体や特定のサービスに関連する設定が含まれるディレクトリ
 
/etc/sysconfig/cpupower
*CPUの電力管理やパフォーマンスを調整するための設定ファイル
 
etc/sysconfig/network
*ネットワーク設定を行うための設定ファイル
 
/etc/sysconfig/network-scripts/ifcfg-eth0
*ネットワークインターフェースeth0の設定を行うための設定ファイル
*ネットワークインターフェースeth0:通常、最初に割り当てられるイーサネットインターフェース・一般的にはイーサネットカード等の有線LANインターフェースを指す
 
/etc/sysconfig/network-scripts/route-ens***(実際のネットワークインターフェース名)
*特定のネットワークインターフェースに対するルーティング情報を設定するためのファイル
 
/etc/resolv.conf
*DNSの設定ファイル（システムが名前解決する際に使用するDNSサーバーの情報が含まれる）
 
/etc/sysconfig/firewalld
*Firewalldと呼ばれるファイアウォール管理ソフトウェアの設定ファイル
 
/etc/sysctl.conf
*カーネルパラメータを設定するためのファイル
 
/etc/sysctl.d/
*カーネルパラメータを設定するためのファイルが格納されるディレクトリ
 
/etc/sysctl.d/50-libreswan.conf
*LibreswanというIPsec実装用の設定ファイル
 
/etc/sysctl.d/99-sysctl.conf
*カーネルパラメータの永続的な設定ファイル（sysctlコマンドを使用して動的に変更できる）
*システム（カーネル）起動時に読み込まれ、カーネルパラメータの設定値が適用される
*カーネル:OSの中核部分、メモリ管理、プロセス管理、デバイスドライバなど様々な機能を担当する
*カーネルパラメータ:カーネルの動作や設定を制御するパラメータ（例えば、スワップアウトの頻度（メモリ）、リアルタイム処理の遅延時間（プロセス管理）など、カーネルの設定値）
・形式
# カーネルパラメータ名 = 値（1:true オン）
 
/etc/systemd/
*systemdサービスマネージャーの設定ファイルが格納されるディレクトリ
 
/etc/systemd/system.conf
*systemdサービスマネージャーのデフォルト設定ファイル（サービスの起動順序やログの保存場所・出力レベルなど）
*systemd:サービス管理システム、起動時に実行するサービスや、サービスの動作設定などを管理する
 
/etc/vsftpd/
*vsftpd(Very Secure FTP Daemon)の設定ファイルが格納されるディレクトリ
 
/etc/vsftpd/vsftpd.conf
*vsftpd（FTPサーバーソフトウェア）の動作を制御する主要な設定ファイル
*ユーザーのアクセス権限、接続設定、セキュリティ設定などを定義する
 
/etc/vsftpd/user_conf/[user]
*vsftpdの設定ファイルの中で、[user]に特化した設定を定義するために使用される
write_enable:書き込み操作（アップロード・ディレクトリ作成等）を許可するかどうかを設定
 
/etc/yum/pluginconf.d/subscription-manager.conf
*subscription-managerツールのプラグイン設定ファイル
*プラグイン：ソフトウェアの機能を拡張したり追加したりするためのソフトウェアコンポーネント
 
/etc/yum.conf
*パッケージ管理を行うための設定ファイル
 
/etc/yum.repos.d/
*RedHat系で使用されるYumパッケージマネージャーのリポジトリ設定ファイルが格納されるディレクトリ
 
/etc/group
*グループ設定ファイル
グループ名:PW:GID:メンバー
*GID:グループ識別番号
 
/etc/shadow
*パスワードの暗号化された情報を格納するファイル
 
/etc/hostname
*システムのホスト名を格納するファイル
 
/etc/selinux/config
*SELinuxの動作を設定する主要ファイル
*SELinux:Linuxカーネルに組み込まれたセキュリティ機能
 
 
/home
通常のユーザーのホームディレクトリが格納されている
ユーザーごとに一つずつホームディレクトリが作成される（各ユーザー所有で他ユーザーからのアクセスは制限される）
/home/user1 /home/user2
 
 
/root
rootユーザー(スーパーユーザー)のホームディレクトリが格納されている
 
 
/lib
32ビットシステム向けの共有ライブラリが格納されている
*共有ライブラリ：アプリケーションが実行する際に必要な共有コードや機能を提供する
*32ビットのアプリケーションが動作することを可能にする
 
/lib64
64ビットシステム向けのの共有ライブラリが格納されている
*64ビットのアプリケーションが動作することを可能にする（/lib/と/lib64がどちらもあることで32ビットのアプリケーションと同時動作可能）
 
/media
外部デバイスやネットワーク共有ディレクトリを一時的にマウントするための場所
 
/mnt
一時的にファイルシステムをマウントするためのディレクトリ
 
/opt
オプションのアプリケーションやパッケージをインストールするためのディレクトリ
*オプション：システム全体の動作には必須ではなく、ユーザーが個別に選択してインストールするアプリケーションやパッケージのこと
 
 
/proc
Linuxカーネルが実行中のシステムやプロセスに関する情報を提供するために使用される仮想ファイルシステム
*このディレクトリの中にファイルが保存されているわけではなく、カーネルが実行時に動的に情報を生成して提供しているに過ぎない
*番号のディレクトリはPID(プロセスID)、プロセスの状態やリソース使用状況が動的に提供されている
 
 
/proc/cpuinfo
*CPUに関する情報を表示する仮想ファイル
 
 
/proc/meminfo
*システムのメモリ使用状況に関する情報を表示する仮想ファイル
 
 
/run
実行中のシステムやサービスに関連する一時ファイルや情報を格納するためのディレクトリ（ランタイムファイルの格納）
*システム起動時に自動的に作成され、一般的にシステムの実行中のみ存在する
 
/sys
カーネルやデバイスに関する情報を提供するための仮想ファイルシステム
 
/sys/kernel/
*カーネル内のデータ構造をユーザースペースに見せるためのもの
 
/srv
サービス用のデータを格納するために使用されるディレクトリ
webサーバーやFTPサーバー等が提供するコンテンツを格納するのに利用される
 
/data
一般的にデータを格納するために使用されるディレクトリ
 
/work
作業用のディレクトリを格納するために使用されることがあるディレクトリ
 
/ftp
サーバがデータを格納するためのディレクトリとしてしようされることがあるディレクトリ
 
/BKUP
バックアップファイルやバックアップデータを格納するために使用されることがあるディレクトリ
特定の用途に予約されているわけではない
 
/tmp
一時ファイルを格納するするためのディレクトリ（システム全体で共有される一時的な場所）
*全ユーザーがアクセス可能
 
/usr（Unix System Resources）
ユーザー向けのアプリケーションやその他の共有リソースを格納するためのディレクトリ
 
/usr/lib/systemd/system
*systemdサービス管理ユーティリティの設定ファイルが格納されるディレクトリ
*systemd:様々なプログラムを動かす元のプログラム、Unit単位でシステム起動処理を行う
 
 
/var(variable)
可変のデータやログファイルを格納するためのディレクトリ
*システムの実行中に変化するデータを管理するために使用される
 
/var/log
*/logのシンボリックリンクとして存在（一部では別個のディレクトリとして存在）
*シンボリックリンク
 
/var/spool/cron/[root,user]
*[]ユーザーがcronデーモンで実行するジョブを定義するファイル
*crontab（システム全体のcrontabファイル）と異なり、特定のユーザーのみが使用できる
 
/log（古い？）
システム全体のログファイルを格納する標準的なディレクトリ