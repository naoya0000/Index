 
■Apache Http Server
オープンソースのWebサーバーソフトウェア
無料で使用可能
高い性能と柔軟な機能拡張が可能で、多様なモジュールをサポートしている
 
 
■設定ファイル
/etc/httpd/conf/httpd.conf
 
特定のディレクトリに対して適用される設定を囲むために使用される
<directory "/">
    AllowOverride None
    Options None
    Require all denied
</directory>
 
<directory "/var/・/html">
    ~
</directory>
 
AllowOverride
 
Options None
Require all denied
 
 
■設定値
ServerTokens
Not Found等のHTTPレスポンスヘッダに含めるサーバ情報(OS種別、モジュール情報等)
出力の制御(エラーページでOS名表示可否)
*値
Prod：製品名のみ
Full：OSやモジュール情報まで含む
 
ServerRoot
Apacheの設定ファイルやログファイル等が配置されるディレクトリ
*値
"/etc/httpd"
 
PidFile
サーバ起動時にApache(Webサーバー)のプロセスIDを記録するファイル
*プロセスID：プロセスを一意に識別する番号
*値
/etc/httpd/run/httpd.pid 等
 
Timeout
クライアントからの接続要求(リクエスト)を受け取ってからタイムアウトするまでの時間(秒)
*値
300(default)
 
Listen
Apacheサーバがクライアントからのリクエストを受け付けるポート番号やIPアドレス
*デフォルトでは、全てのインターフェースで設定されたポートに対してリッスンする
*値
80
10.0.0.1:8080
 
ListenBackLog
処理保留中のリクエストを格納するキューの最大サイズ
*値
400
 
LoadModule
Apacheに追加機能を提供するモジュールを読み込む
 
Include
他の設定ファイルのインクルード(読み込み)設定
*値
conf/・・・/*.conf
 
User
Apacheが動作する際のユーザーを指定
*値
apache
 
Group
Apacheが動作する際のグループを指定
*値
apache
 
ServerAdmin
サーバー管理者のメールアドレスを指定
サーバがクライアントに送るエラーメッセージに表示される電子メールのアドレス
ユーザーが問題を報告する際の連絡先
 
ServerName
サーバーの公式な名前
サーバが自分自身を示すときに使うホスト名とポート
 
ServerSignature
自動生成されたエラーページやディレクトリリストのフッターにサーバー情報を表示するかどうかの指定
*値
Off:情報を表示しない
 
DocumentRoot
ApacheがWebコンテンツを提供する際のルートディレクトリを指定する設定
クライアント(ブラウザなど)がウェブサーバーにリクエストを送信した際に、Apacheがどのディレクトリからファイルを探して提供するかを決定する
*値
"/var/www/html"
 
ErrorLog
Apacheが発生したエラーを記録するログファイルのパスを指定する設定
Webサーバーでの問題解決にはこのログファイルのエラー原因の特定が有効
*値
"/var/log/httpd/error_log"
 
LogLevel
Apacheのログの詳細度を設定する(指定したレベル以上のメッセージがログに記録される)
高いログレベルを設定すると、相応にログファイルが大きくなるためwarnかerrorレベルが一般的
*値
emerg:サーバーが利用不可能なレベルの致命的なエラー
alert:すぐに修正が必要な状況
crit:致命的な問題
error:エラー
warn:警告
notice:通常の動作であるが重要な出来事
info:一般的な情報
debug:デバッグ情報
trace1~trace8:より詳細なデバッグ情報
 
CustomLog
アクセスログの出力先およびフォーマットの指定
クライアントからのリクエストに関する情報(アクセスログ)を記録するための設定
*値
"/var/log/httpd/access_log" combined(アクセスログのフォーマット)
 
ErrorDocument
エラーが発生したときにサーバがクライアントに送るもの
特定のHTTPエラーステータスコードに対するカスタムエラーページを指定する
 
DirectoryIndex
ディレクトリへのアクセスがあった際に、デフォルトで表示されるファイルを指定する
複数ファイルの指定も可能
*値
index.html
 
KeepAlive
同じクライアントからの複数のリクエストに対して、接続を維持するかどうかの設定
*値
On：クライアントからの複数のリクエストに対して、同じ接続で処理
 
MaxKeepAliveRequests
KeepAliveが有効な場合に1コネクションで受け付け可能なリクエスト数の上限値
超えると接続が閉じられる
*値
100
 
KeepAliveTimeout
KeepAlive接続を維持する最大秒数を指定
*値
5
 
LimitRequestBody
クライアントが送信できるリクエストボディの最大サイズ
サーバが非常に大きなデータの受信を拒否し、リソースの過剰消費を防ぐことができる