
■要件定義(何をするのか)

目的：
個人でWebサイトを運営する
運営者のみテキストデータのコンテンツを投稿できる(アプリケーション)

ユーザー数：
月間10名程度がアクセスする
将来的なユーザー増も考慮したい

収益性：
なし、コスト最小化を重視する


・非機能要件
可用性：
初期段階での可用性要件は不要
ユーザー数の増加に対応できる構成を用意する

性能：
小規模トラフィックに耐えうる最低限の性能を確保

拡張性：
将来的なユーザー数の増加を考慮し、必要に応じてスケールアップ/スケールアウトが可能な構成を目指す

セキュリティ：
機密性の高い情報は扱わない
基本的なセキュリティ対策を実施し、運営者の権限保護(IAM,セキュリティグループ)

運用保守：
自動化されたバックアップとモニタリングで最小限の運用コスト維持する


■基本設計(どう実現するのか)

・アプリケーションのホスティング
Lightsail
※EC2よりコストが低いため採用

・静的コンテンツのホスティング
S3
※ユーザーが増えた場合はCloudFrontによる配信最適化を検討

・データベース
案1
SQLiteをLightsailにホストする
※RDSはコストが高いため、初期の採用は難しい
※オープンソースのデータベースエンジンを採用した場合、スケールアップは困難

案2
Aurora Serverless
※必要なときのみ自動的なスケールが可能

・ドメイン管理
他ドメインプロバイダーを採用
※Route53より低コストに実現可能

・バックアップとログ管理
アプリケーション内のログ管理
※必要に応じて後からCloudWatch Logsを導入

・セキュリティ
Certificate Managerを使用してSSL証明書を発行し、LightsailのWebサーバーに設定する


■詳細設計
※コストに関係のある設定値を定義する

・アプリケーションのホスティング
構成：単一のLightsailインスタンスでWebアプリケーションをホスティング
512MBメモリ
1vCPU
20GB SSD

SSL証明書をCertificate Managerにて取得
HTTPからHTTPSへのリダイレクト設定実施

・静的コンテンツのホスティング
構成：静的コンテンツをS3バケットに配置し、Webサーバーから参照
標準ストレージクラスを使用
低頻度アクセス用のストレージクラス（S3 Standard-IA）を検討

・データベース
構成：Aurora Serverlessを採用
自動バックアップが標準で提供される

・ドメイン管理
Route53よりも低コストでドメインを管理可能なプロバイダーを選定
Lightsailに対してレコード設定

・ログ管理
Lightsail内でアプリケーションログを保持

・バックアップ
Lightsailインスタンスのスナップショットを定期的に取得
Lambdaを使用し、スナップショットを取得・削除を自動化する(週二世代保管)

